Рассмотрим вывод, добавление и удаление данных на примере одной таблицы(Objects).

1. Подключение к базе данных. Используя это подключшние будем делать запросы.

<?php
	// Conection info
	$servername = "localhost";
	$username = "root";
	$password = "";
	$dbname = "dbtask";

	// Create connection
	$conn = new mysqli($servername, $username, $password, $dbname);

	// Check connection
	if ($conn->connect_error)
	{
	    die("Connection failed: " . mysqli_connect_error() . "<br>");
	}
?>

2. Вывод данных

Формируем запрос:

$sql = "SELECT * FROM `object`";

Получаем результат:

$result = $conn->query($sql);

В цикле формируем строки таблицы, при этом опускаем столбец с ID. Первые 4 столбца заполняем данными из таблицы, последние 2 формами edit и delete:

while($row = $result->fetch_assoc())
{
	$deleteForm = '
		<form action="object.php" method="GET">
			<input type="hidden" name="action" value="delete">
			<input type="hidden" name="id" value="' . $row["ID"] . '">
			<input type="submit" value="delete" class="btn btn-default">
		</form>
	';

	$editForm = '
		<form action="objectEdit.php" method="GET">
			<input type="hidden" name="action" value="edit">
			<input type="hidden" name="id" value="' . $row["ID"] . '">
			<input type="submit" value="edit" class="btn btn-default">
		</form>
	';

	// echo "<tr> <td>" . $row["ID"]. "</td>
	echo "<tr>
		<td>" . $row["Name"]. "</td>
		<td>" . $row["Description"]. "</td>
		<td>" . $deleteForm. "</td>
		<td>" . $editForm . "</td> </tr>";
}

3. Удаление данных. Форма удаления передает на эту же страницу запрос, в параметрах которого указано действие удаления и ид столбца, который требуется удалить. Для обработки этого запроса вставим на страницу код, который будет их отлавливать и выполнять соответствующие запросы удаления к базе данных:

// Delete action
if (isset($_GET["action"]) && $_GET["action"] == "delete")
{
	if (isset($_GET["id"]) && is_numeric($_GET["id"]))
	{
		$sql = "DELETE FROM `object` WHERE `ID` = " . $_GET["id"];
		$result = $conn->query($sql);
	}
	else
	{
		echo "Bad parameters for delete operation<br>";
	}
}

4. Изменение данных. Форма edit отправляет запрос на отдельную станицу "Object_edit", где расположены поля редактирования. Так же она передает ид обьекта для редактирования. На основе этого ид поля автоматически заполняются старыми значениями(преварительно выполняется запрос к базе).

<form action="object.php" method="GET">
	<input type="hidden" name='id' value="<?php echo $row["ID"]; ?>">
	
	<div class="form-group">
		<label for="nameInput">Name</label>
		<input type="text" name="name" value="<?php echo $row["Name"]; ?>" class="form-control" id="nameInput">
	</div>

	<div class="form-group">
		<label for="descriptionInput">Description</label>
		<input type="text" name="description" value="<?php echo $row["Description"]; ?>" class="form-control" id="descriptionInput">
	</div>
	
	<input type="hidden" name="action" value="update">

	<input type="submit" value="Update" class="btn btn-default"><br>
</form>

По окончении редактирования, выполняется запрос обратно на страницу "Object", следующиш код в ней обрабатыбает этот запрос:

// Update action
if (isset($_GET["action"]) && $_GET["action"] == "update")
{
	if (isset($_GET["id"]) && is_numeric($_GET["id"]) && isset($_GET["name"]) && isset($_GET["description"]))
	{
		$sql = "UPDATE `Object` SET `Name` = '".$_GET["name"]
			."', `Description` = '".$_GET["description"]
			."' WHERE `object`.`ID` = ".$_GET["id"];
		$result = $conn->query($sql);
	}
	else
	{
		echo "Bad parameters for update operation<br>";
	}
}

5. Добавление данных. Под таблицей расположена форма добавления данных, которая делает запрос на эту же страницу:

<form action="object.php" method="GET">
	<div class="form-group">
		<label for="nameInput">Name</label>
		<input type="text" name="name" class="form-control" id="nameInput">
	</div>

	<div class="form-group">
		<label for="descriptionInput">Description</label>
		<input type="text" name="description" class="form-control" id="descriptionInput">
	</div>

	<input type="hidden" name="action" value="insert">
	
	<button type="submit" class="btn btn-default">Insert</button>
</form>

Следующий код принимает и обрабатувает запрос:

// Insert action
if (isset($_GET["action"]) && $_GET["action"] == "insert")
{
	if (isset($_GET["name"]) && isset($_GET["description"]))
	{
		$sql = "INSERT INTO `object` (`ID`, `Name`, `Description`)
			VALUES (NULL, '" . addslashes ($_GET["name"]) . "', '" .
				addslashes($_GET["description"]) . "')";
		$result = $conn->query($sql);
	}
	else
	{
		echo "Bad parameters for insert operation<br>";
	}
}